"""
test_29_apr
DAG auto-generated by Astro Cloud IDE.
"""

from airflow.decorators import dag
from airflow.providers.amazon.aws.transfers.gcs_to_s3 import GCSToS3Operator
from airflow.providers.google.cloud.transfers.mssql_to_gcs import MSSQLToGCSOperator
from airflow.providers.telegram.operators.telegram import TelegramOperator
from astro import sql as aql
import pandas as pd
import pendulum


@aql.dataframe(task_id="python_1")
def python_1_func():
    print("Hi")

default_args={
    "owner": "abhishek.bhakat@astronomer.io,Open in Cloud IDE",
}

@dag(
    default_args=default_args,
    schedule="0 0 * * *",
    start_date=pendulum.from_format("2024-04-29", "YYYY-MM-DD").in_tz("UTC"),
    catchup=False,
    owner_links={
        "abhishek.bhakat@astronomer.io": "mailto:abhishek.bhakat@astronomer.io",
        "Open in Cloud IDE": "https://cloud.astronomer.io/clbkx9he4229155kdz2tl8bv7vq/cloud-ide/clvks67f5094k01n8ez0qavwg/clvksagfx094t01n867mgb3ir",
    },
)
def test_29_apr():
    python_1 = python_1_func()

    send_telegram_notification = TelegramOperator(
        telegram_conn_id="your_telegram_connection_id",
        chat_id="your_chat_id",
        task_id="send_telegram_notification",
    )

    g_c_s_to_s3_operator_1 = GCSToS3Operator(
        task_id="g_c_s_to_s3_operator_1",
    )

    m_ssql_to_g_c_s_operator_1 = MSSQLToGCSOperator(
        sql="SELECT 1",
        bucket="abcd",
        filename="andc",
        mssql_conn_id="test_mesl",
        task_id="m_ssql_to_g_c_s_operator_1",
    )

dag_obj = test_29_apr()
