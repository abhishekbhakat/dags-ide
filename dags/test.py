"""
test
DAG auto-generated by Astro Cloud IDE.
"""

from airflow.decorators import dag
from airflow_anomaly_detection.operators.bigquery.metric_batch_alert_operator import BigQueryMetricBatchAlertOperator
from astro import sql as aql
import pandas as pd
import pendulum


@aql.dataframe(task_id="python_1")
def python_1_func():
    return

default_args={
    "owner": "abhishek.bhakat@astronomer.io,Open in Cloud IDE",
}

@dag(
    default_args=default_args,
    schedule="0 0 * * *",
    start_date=pendulum.from_format("2023-08-30", "YYYY-MM-DD").in_tz("UTC"),
    catchup=False,
    owner_links={
        "abhishek.bhakat@astronomer.io": "mailto:abhishek.bhakat@astronomer.io",
        "Open in Cloud IDE": "https://cloud.astronomer.io/clilt7vco00a601kk5fz65ob1/cloud-ide/cllqdh2py00fg01onbb7slrav/cllxga6bs002c01mi2o0abhc9",
    },
)
def test():
    python_1 = python_1_func()

    big_query_metric_batch_alert_operator_1 = BigQueryMetricBatchAlertOperator(
        task_id="big_query_metric_batch_alert_operator_1",
    )

    big_query_metric_batch_alert_operator_1 << python_1

dag_obj = test()
